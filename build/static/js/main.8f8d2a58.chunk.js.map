{"version":3,"sources":["components/HeaderList/HeaderList.js","components/AboutMeHeader/AboutMeHeader.js","components/Button/Button.js","components/Education/Education.js","components/Courses/Courses.js","components/PersonalInfo/PersonalInfo.js","components/TechnicalSkills/TechnicalSkills.js","components/Projects/Project/Project.js","components/Projects/Projects.js","containers/AboutMe/AboutMe.js","containers/App.js","serviceWorker.js","index.js"],"names":["HeaderList","props","className","lis","divs","map","div","i","key","onMouseEnter","divHovered","hovered","AboutMeHeader","handleHover","setState","setTimeout","ulClass","handleHoverLeave","state","this","onMouseLeave","React","Component","Button","href","url","target","rel","Education","Courses","courses","course","PersonalInfo","keys","values","infoDivs","TechnicalSkills","Project","name","info","Projects","AboutMe","hoveredDiv","renderSwitch","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f8d2a58.chunk.js","sourcesContent":["import React from 'react'\r\nimport './HeaderList.css'\r\n\r\nexport default function HeaderList(props) {\r\n\r\n    if (props.className !== \"wait\") {\r\n        var lis = props.divs.map((div, i) => {\r\n            return (\r\n                <li className=\"about-me-header-ul-li\"\r\n                    key={i}\r\n                    onMouseEnter={() => props.divHovered(div)}>\r\n                    {div}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ul className={props.hovered ? \"about-me-header-ul-active\" : props.className}>\r\n            {props.className !== ' wait' ? lis : null}\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './AboutMeHeader.css'\r\nimport HeaderList from '../HeaderList/HeaderList'\r\nclass AboutMeHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hovered: false,\r\n            ulClass: 'wait'\r\n        }\r\n    }\r\n\r\n    handleHover = () => {\r\n        this.setState({ hovered: true })\r\n        setTimeout(() => {\r\n            this.setState({ ulClass: 'about-me-header-ul' })\r\n        }, 700)\r\n    }\r\n    handleHoverLeave = () => {\r\n        this.setState({ hovered: false })\r\n        setTimeout(() => {\r\n            this.setState({ ulClass: 'wait' })\r\n        }, 700)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className={this.state.hovered ? \"about-me-header-active\" : \"about-me-header\"}\r\n                onMouseEnter={this.handleHover}\r\n                onMouseLeave={this.handleHoverLeave} >\r\n               \r\n                    <HeaderList className={this.state.ulClass  === 'wait' ? 'wait' : 'about-me-header-ul'} divHovered={this.props.divHovered}\r\n                        divs={this.props.divs}\r\n                        hovered={this.state.hovered}\r\n                    />\r\n                {this.state.hovered ? null :\r\n                    <div className=\"arrow-div\">\r\n                        <i className=\"fas fa-arrow-alt-circle-right\"></i>\r\n                    </div>}\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutMeHeader;","import React from 'react'\r\nimport './Button.css'\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <a href={props.url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\">\r\n            <button className=\"visit-btn\">Project</button>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport './Education.css'\r\nimport '../shared.css'\r\nimport Button from '../Button/Button'\r\n\r\nfunction Education(props) {\r\n    return (\r\n        <div className=\"education-main-div\">\r\n            <h1 className=\"about-me-divs-title\">Education</h1>\r\n                <div className=\"education-div\">\r\n                        <h3>Semos Education, Skopje, North Macedonia</h3>\r\n                        <p>March 2019 - February 2020</p>\r\n                        <h4>\r\n                            I have worked and understood the connection between the front-end and the back-end when it comes to developing\r\n                            a web application, including the architectural pattern MVC. I have a good understanding of the communication\r\n                            between the handlers of the back-end and the UI in the front end. During the course that lasted aproximately 1 year,\r\n                            I have acknowledged skills with languages and frameworks such as Javascript, DOM,ReactJS, NodeJS and MongoDB, altogether with multiple libraries.\r\n                        </h4>\r\n                        <Button url=\"https://stark-island-29614.herokuapp.com\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Education;","import React from 'react'\r\nimport './Courses.css'\r\n\r\nexport default function Courses() {\r\n    var coursesTitles = ['Udemy - Web Developer Bootcamp by Colt Steele','Udemy - React - The Complete Guide by Maximilian Schwarzmüller',\r\n    'Udemy - NodeJS - The Complete Guide by Maximilian Schwarzmüller', 'Udemy - The Complete JavaScript Course by Jonas Schmedtmann']\r\n    var courses = coursesTitles.map((course, i) => {\r\n        return (\r\n            <li key={course + i}>{course}</li>\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"courses-div\">\r\n            <h1 className=\"about-me-divs-title\">Courses</h1>\r\n                    <p className=\"courses-p\">Before joining Semos Education, I had previous experience by following several courses on Udemy, including:</p>\r\n                    <ul className=\"courses-ul\">\r\n                        {courses}\r\n                    </ul>\r\n                </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './PersonalInfo.css'\r\nimport '../shared.css'\r\n\r\nfunction PersonalInfo(props) {\r\n    const keys = [\"Name\", \"Professional Headline\", \"Email\", \"Phone Number\", \"Location\", \"Age\", \"Resume\", \"GitHub\", \"LinkedIn\"]\r\n    const values = [\"Stefan Gorgevik\", \"Full stack web developer\",\r\n        \"stefangorgevik@hotmail.com\", \"079-231-692\", \"Skopje, Macedonia\", 25,\r\n        'https://drive.google.com/open?id=1HWOa6Lxk1egH4lndr3b4vPnnJhV0_y-h',\r\n        \"https://github.com/StefanGorgevik\",\r\n        \"https://www.linkedin.com/in/stefan-gorgevik-88058918b/\"]\r\n    const infoDivs = keys.map((key, i) => {\r\n        return (\r\n            <div key={key + i} className=\"info-div\">\r\n                <p className=\"key\">{key}</p>\r\n                <p className=\"value\">{values[i] === 'https://github.com/StefanGorgevik' ||\r\n                    values[i] === 'https://www.linkedin.com/in/stefan-gorgevik-88058918b/' ||\r\n                    values[i] === 'https://drive.google.com/open?id=1HWOa6Lxk1egH4lndr3b4vPnnJhV0_y-h' ?\r\n                    <a href={values[i]}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\">\r\n                        {keys[i]}</a>\r\n                    : values[i]}</p>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"personal-main-info-div\">\r\n            <h1 className=\"about-me-divs-title\">Personal Info</h1>\r\n            {infoDivs}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalInfo;","import React from 'react'\r\nimport './TechnicalSkills.css'\r\n\r\n\r\nfunction TechnicalSkills(props) {\r\n    return (\r\n        <div className=\"technical-skills-div\">\r\n            <h1 className=\"about-me-divs-title\">Technical Skills</h1>\r\n            <div className=\"ul-div\">\r\n                <h1 className=\"ul-div-h1\">Front-end</h1>\r\n                <ul>\r\n                    <li>HTML</li>\r\n                    <li>CSS</li>\r\n                    <li>Bootstrap</li>\r\n                    <li>ReactJS</li>\r\n                    <li>DOM</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"ul-div\">\r\n                <h1 className=\"ul-div-h1\">Back-end</h1>\r\n                <ul>\r\n                    <li >NodeJS</li>\r\n                    <li >MongoDB</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"ul-div\">\r\n                <h1 className=\"ul-div-h1\">Concepts and skills</h1>\r\n                <ul>\r\n                    <li>MVC</li>\r\n                    <li>JSON</li>\r\n                    <li>API & RestAPI</li>\r\n                    <li>HTTP</li>\r\n                    <li>Databases</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TechnicalSkills;","import React from 'react'\r\nimport './Project.css'\r\nimport Button from '../../Button/Button'\r\n\r\nexport default function Project(props) {\r\n    return (\r\n            <div className=\"project-info-div\">\r\n                <h1 className=\"project-info-h1\">{props.name}</h1>\r\n                    <p className=\"project-info-p\">\r\n                        {props.info}\r\n                    </p>\r\n                    <Button url={props.url}/>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Projects.css'\r\nimport Project from './Project/Project'\r\n\r\nfunction Projects(props) {\r\n    return (\r\n        <div className=\"projects-main-div\">\r\n            <h1 className=\"about-me-divs-title\">Projects</h1>\r\n            <div className=\"projects-div\">\r\n                <Project name=\"Budget Architect\"\r\n                    info=\"Full-stack developed project, made with NodeJS and ReactJS. \r\n                    I used MongoDB as a database and mongoose for creating the model.  \r\n                    This is a project where you can save your products and also add a group of products.\r\n                     Every product and group can be edited or deleted, and all items can be sorted and filtered.\r\n                     For style, I used plain CSS, and for deployment, I used Heroku.\"\r\n                    url=\"https://budgetarchitect.herokuapp.com/\" />\r\n                <Project name=\"BodyBuildingMedia - V1\"\r\n                    info=\"The first version of a bodybuilding social media, which is a full-stack developed project, \r\n                    created with ReactJS, Node.js, and MongoDB. It is a responsive website and for UI, I used plain HTML and CSS. \r\n                    It is a type of social media where you can keep track of your diet and workout plan, and you can see other users' diets, \r\n                    workout plans,and personal info. Photo upload mode was created with the help of Cloudinary and \r\n                     the project is deployed on Heroku.\"\r\n                    url=\"https://bodybuildingmedia.herokuapp.com\" />\r\n                <Project name=\"Expense Calculator\"\r\n                    info=\"Full-stack developed project, created with ReactJS, Node.js, and MongoDB. For the UI, I used plain HTML and\r\n                            CSS. It is a calculator where you can keep track of your expenses and bought items. It was given as an ending project\r\n                            by Semos Education. I also included a user info page and the option to add another user and merge both of your products.\"\r\n                    url=\"https://stark-island-29614.herokuapp.com\" />\r\n\r\n                <Project name=\"Movie Database\"\r\n                    info=\"Front-end developed project, created with ReactJS. For the UI, I used plain HTML and\r\n                            CSS. It is a small front-end project where I used a prepared API, but the information was limited, \r\n                            so I worked with what I had.\"\r\n                    url=\"https://stefangorgevik.github.io/movies/\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React from 'react'\r\nimport './AboutMe.css'\r\nimport AboutMeHeader from '../../components/AboutMeHeader/AboutMeHeader'\r\nimport Education from '../../components/Education/Education'\r\nimport Courses from '../../components/Courses/Courses'\r\nimport PersonalInfo from '../../components/PersonalInfo/PersonalInfo'\r\nimport TechnicalSkills from '../../components/TechnicalSkills/TechnicalSkills'\r\nimport Projects from '../../components/Projects/Projects'\r\n\r\nclass AboutMe extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            divs: [\"Personal Info\", \"Education\", \"Courses\", \"Technical Skills\", \"Projects\"],\r\n            hoveredDiv: 'Personal Info'\r\n        }\r\n    }\r\n\r\n    divHovered = (div) => {\r\n        this.setState({\r\n            hoveredDiv: div\r\n        })\r\n    }\r\n\r\n    renderSwitch() {\r\n        switch (this.state.hoveredDiv) {\r\n            case 'Personal Info':\r\n                return <PersonalInfo/>;\r\n            case 'Education':\r\n                return <Education/>;\r\n            case 'Courses':\r\n                return <Courses/>;\r\n            case 'Technical Skills':\r\n                return <TechnicalSkills/>;\r\n            case 'Projects':\r\n                return <Projects/>;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"about-me-main-div\">\r\n                <AboutMeHeader\r\n                    divs={this.state.divs}\r\n                    hoveredDiv={this.state.hoveredDiv}\r\n                    divHovered={this.divHovered} />\r\n                <div className=\"about-me-div\">\r\n                    {this.renderSwitch()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\nimport './App.css';\nimport AboutMe from './AboutMe/AboutMe.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n          <AboutMe/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}